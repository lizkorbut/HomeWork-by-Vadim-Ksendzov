Ссылка на github https://github.com/lizkorbut

JSON
4. Создать внешний репозиторий c названием JSON.
5. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/lizkorbut/JSON.git

6. Внутри локального JSON создать файл “new.json”.
	touch JSON/new.json

7. Добавить файл под гит.
	cd JSON && git add new.json

8. Закоммитить файл.
	git commit -m 'new file'

9. Отправить файл на внешний GitHub репозиторий.
	git push
10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	vim new.json 
{
	FIO: 'Liza-Vika Alekseevna Korbut',
	age: 20,
	animalCount: 1,
	salary: 500
}

11. Отправить изменения на внешний репозиторий.
	git add new.json
	git commit -m 'new information'
	git push

12. Создать файл preferences.json

13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	touch preferences.json
	vim preferences.json

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	touch sklls.json && vim sklls.json 

15. Отправить сразу 2 файла на внешний репозиторий.
	git add preferences.json sklls.json
	git commit -m 'add information about preferences and skills'
	git push

16. На веб интерфейсе создать файл bug_report.json.
	
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
20. Синхронизировать внешний и локальный репозиторий JSON
	git pull

XML
21. Создать внешний репозиторий c названием XML.
22. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/lizkorbut/XML.git

23. Внутри локального XML создать файл “new.xml”.
	cd XML && touch new.xml

24. Добавить файл под гит.
	git add new.xml

25. Закоммитить файл.
	git commit -m 'new file'

26. Отправить файл на внешний GitHub репозиторий.
	git push

27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	vim new.xml
	<?xml version="1.0"?>
		<Information>
			<FIO>Liza-Vika Alekseevna Korbut</FIO>
			<age>20</age>
			<animal>1</animal>
			<salary>500</salary>
		</Information>

 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -m 'new information'
	git push

 29. Создать файл preferences.xml
	touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	vim preferences.xml
	<?xml version="1.0"?>
		<Preferences>
        		<film>Harry_Potter</film>
        		<serial>Ragnarok</serial>
        		<food>sushi</food>
        		<season>summer</season>
        		<country>Japan</country>
		</Preferences>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	vim sklls.xml
	<?xml version="1.0"?>
		<Skills>
       			<skill1>Testing theory</skills1>
        		<skill2>HHTP methods of requests to the server</skill2>
       			<skill3>JSON XML</skill3>
        		<skill4>API testing</skill4>
        		<skill5>Mobile testing</skill5>
        		<skill6>Creating test documentation (check lists, test cases, test oatlines, bag reports)</skill6>
        		<skill7>Agile methodologies<skill7>
		</Skills>

32. Сделать коммит в одну строку.
	git commit add preferences.xml sklls.xml && git commit -m 'add information about preferences and skills'

33. Отправить сразу 2 файла на внешний репозиторий.
	git push

34. На веб интерфейсе создать файл bug_report.xml.
	Add file > Create new file

35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes

36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes

38. Синхронизировать внешний и локальный репозиторий XML
	git pull


TXT
1. Создать внешний репозиторий c названием TXT.
	
2. Клонировать репозиторий TXT на локальный компьютер.
	git clone https://github.com/lizkorbut/TXT.git

3. Внутри локального TXT создать файл “new.txt”.
	 touch TXT/new.txt

4. Добавить файл под гит.
	cd TXT && git add new.txt

5. Закоммитить файл.
	git commit -m 'new file txt'

6. Отправить файл на внешний GitHub репозиторий.
	git push

7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
	vim new.txt
		FIO: Liza-Vika Alekseevna Korbut
		Age: 20
		Animal: 1
		Salary: 500

8. Отправить изменения на внешний репозиторий.
	git commit -am 'new information in file'
	git push

9. Создать файл preferences.txt
	touch preferences.txt

10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	vim preferences.txt
		film: "Harry Potter"
		serial: "Ragnarok"
		food : sushi
		season : summer
		country : Japan

11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
	vim sklls.txt
		Testing theory,
		HHTP methods of requests to the server, 
		JSON,XML,
		API testing,
		Mobile testing, 
		creating test documentation 
		(check Lists,test Cases,test Outlines, bagReports),
		agile methodologies

12. Сделать коммит в одну строку.
	git commit -m 'add information about preferences and skills'

13. Отправить сразу 2 файла на внешний репозиторий.
	git push

14. На веб интерфейсе создать файл bug_report.txt.
15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
18. Синхронизировать внешний и локальный репозиторий TXT
	git pull